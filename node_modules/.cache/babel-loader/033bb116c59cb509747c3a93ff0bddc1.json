{"ast":null,"code":"import _objectSpread from \"C:\\\\Users\\\\Lenovo\\\\Desktop\\\\Orbital\\\\Orbital-master\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/objectSpread\";\nvar _jsxFileName = \"C:\\\\Users\\\\Lenovo\\\\Desktop\\\\Orbital\\\\Orbital-master\\\\src\\\\Components\\\\Planning\\\\Graph\\\\CustomNode.js\";\nimport React from 'react';\nimport { Tooltip } from 'reactstrap';\nimport yellowHex from '../../../Images/nYellow.png';\nimport redHex from '../../../Images/nRed.png';\nimport aquamarineHex from '../../../Images/nAquamarine.png';\nimport blackHex from '../../../Images/nGreyBlack1.png';\n\nclass CustomNode extends React.Component {\n  constructor(props) {\n    super();\n    this.state = {\n      tooltipOpen: false,\n      result: null\n    };\n    this.getTooltipContent = this.getTooltipContent.bind(this);\n    this.toggle = this.toggle.bind(this);\n  }\n\n  getTooltipContent(info) {\n    if (this.state.result === null) {\n      const listItems = info.require.map(x => {\n        const subItems = x.name.map(y => {\n          return React.createElement(\"li\", {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 20\n            },\n            __self: this\n          }, y);\n        });\n        return React.createElement(\"ul\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 22\n          },\n          __self: this\n        }, \"Any one of: \", subItems);\n      });\n\n      const result = React.createElement(\"div\", {\n        class: \"tooltip-content\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 24\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        style: {\n          fontSize: 15,\n          textAlign: 'left',\n          marginBottom: '5px'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 25\n        },\n        __self: this\n      }, info.name), React.createElement(\"ul\", {\n        style: {\n          fontSize: 13\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 26\n        },\n        __self: this\n      }, \"This module requires:\", listItems));\n      this.setState(prevState => {\n        return _objectSpread({}, prevState, {\n          result: result\n        });\n      });\n      return result;\n    } else {\n      return this.state.result;\n    }\n  }\n\n  toggle() {\n    this.setState(prevState => {\n      return _objectSpread({}, prevState, {\n        tooltipOpen: !prevState.tooltipOpen\n      });\n    });\n  }\n\n  render() {\n    var unlocked = true;\n    const lockedIcon = blackHex;\n    const defaultIcon = yellowHex;\n    const addedIcon = redHex;\n    const exemptedIcon = aquamarineHex;\n    var info = this.props.info;\n\n    for (var i = 0; i < info.require.length; i = i + 1) {\n      if (info.require[i].unlocked === false) {\n        unlocked = false;\n        break;\n      }\n    }\n\n    const textColor = info.added[0] === -1 ? 'black' : unlocked ? 'black' : 'white';\n    return React.createElement(\"div\", {\n      class: \"NodeBox\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 67\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 68\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      class: unlocked ? \"textBox\" : \"textBoxLocked\",\n      id: info.id,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 69\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      class: \"textContent\",\n      style: {\n        color: textColor\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 70\n      },\n      __self: this\n    }, info.id)), React.createElement(Tooltip, {\n      style: {\n        border: '1px solid white'\n      },\n      placement: \"top\",\n      isOpen: this.state.tooltipOpen,\n      target: info.id,\n      toggle: this.toggle,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 72\n      },\n      __self: this\n    }, this.getTooltipContent(info)), React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 75\n      },\n      __self: this\n    }, React.createElement(\"img\", {\n      class: info.added[0] === -1 ? \"Image-after\" : unlocked ? info.added[0] > 0 ? \"Image-after\" : \"Image-before\" : \"Image-locked\",\n      src: info.added[0] === -1 ? exemptedIcon : unlocked ? info.added[0] > 0 ? addedIcon : defaultIcon : lockedIcon,\n      alt: \"new\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 77\n      },\n      __self: this\n    }) //<img class={unlocked ? (info.added[0] > 0 ? \"Image-after\" : \"Image-before\") : \"Image-locked\"} src={(unlocked ? (info.added[0] > 0 ? addedIcon : defaultIcon) : lockedIcon)} alt=\"new\"/>\n    )));\n  }\n\n}\n\nexport default CustomNode;","map":{"version":3,"sources":["C:\\Users\\Lenovo\\Desktop\\Orbital\\Orbital-master\\src\\Components\\Planning\\Graph\\CustomNode.js"],"names":["React","Tooltip","yellowHex","redHex","aquamarineHex","blackHex","CustomNode","Component","constructor","props","state","tooltipOpen","result","getTooltipContent","bind","toggle","info","listItems","require","map","x","subItems","name","y","fontSize","textAlign","marginBottom","setState","prevState","render","unlocked","lockedIcon","defaultIcon","addedIcon","exemptedIcon","i","length","textColor","added","id","color","border"],"mappings":"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","sourcesContent":["import React from 'react';\r\nimport { Tooltip } from 'reactstrap';\r\nimport yellowHex from '../../../Images/nYellow.png';\r\nimport redHex from '../../../Images/nRed.png';\r\nimport aquamarineHex from '../../../Images/nAquamarine.png';\r\nimport blackHex from '../../../Images/nGreyBlack1.png';\r\n\r\nclass CustomNode extends React.Component {\r\n    constructor(props) {\r\n      super();\r\n      this.state = { tooltipOpen: false, result: null }\r\n      this.getTooltipContent = this.getTooltipContent.bind(this);\r\n      this.toggle = this.toggle.bind(this);\r\n    }\r\n\r\n    getTooltipContent(info) {\r\n      if (this.state.result === null) {\r\n        const listItems = info.require.map(x => {\r\n          const subItems = x.name.map(y => {\r\n            return <li>{y}</li>;\r\n          })\r\n          return <ul>Any one of: {subItems}</ul>;\r\n        })\r\n        const result = (<div class='tooltip-content'>\r\n          <div style={{fontSize: 15, textAlign:'left', marginBottom: '5px'}}>{info.name}</div>\r\n          <ul style={{fontSize: 13}}>\r\n            This module requires:\r\n            {listItems}\r\n          </ul>\r\n        </div>)\r\n        this.setState(prevState => {\r\n          return {\r\n            ...prevState,\r\n            result: result\r\n          }\r\n        })\r\n        return result;\r\n    } else {\r\n      return this.state.result;\r\n    }\r\n  }\r\n\r\n  toggle() {\r\n    this.setState(prevState => {\r\n      return {\r\n        ...prevState,\r\n        tooltipOpen: !prevState.tooltipOpen\r\n      }\r\n    })\r\n  }\r\n\r\n  render() {\r\n    var unlocked = true;\r\n    const lockedIcon = blackHex;\r\n    const defaultIcon = yellowHex;\r\n    const addedIcon = redHex;\r\n    const exemptedIcon = aquamarineHex;\r\n    var info = this.props.info\r\n    for (var i = 0; i < info.require.length; i = i + 1) {\r\n      if (info.require[i].unlocked === false) {\r\n        unlocked = false;\r\n        break;\r\n      }\r\n    }\r\n    const textColor = (info.added[0] === -1) ? 'black' : unlocked ? 'black' : 'white';\r\n    return (\r\n        <div class=\"NodeBox\">\r\n          <div>\r\n            <div class={unlocked ? \"textBox\" : \"textBoxLocked\"} id={info.id}>\r\n              <div class=\"textContent\" style={{color: textColor}}>{info.id}</div>\r\n            </div>\r\n              <Tooltip style={{border: '1px solid white'}} placement=\"top\" isOpen={this.state.tooltipOpen} target={info.id} toggle={this.toggle}>\r\n                {this.getTooltipContent(info)}\r\n              </Tooltip>\r\n            <div>\r\n              {\r\n              <img class={info.added[0] === -1 ? \"Image-after\" : (unlocked ? (info.added[0] > 0 ? \"Image-after\" : \"Image-before\") : \"Image-locked\")} src={info.added[0] === -1 ? exemptedIcon : (unlocked ? (info.added[0] > 0 ? addedIcon : defaultIcon) : lockedIcon)} alt=\"new\"/>\r\n              //<img class={unlocked ? (info.added[0] > 0 ? \"Image-after\" : \"Image-before\") : \"Image-locked\"} src={(unlocked ? (info.added[0] > 0 ? addedIcon : defaultIcon) : lockedIcon)} alt=\"new\"/>\r\n              }\r\n              </div>\r\n          </div>\r\n        </div>\r\n    )\r\n  }\r\n}\r\n\r\nexport default CustomNode;"]},"metadata":{},"sourceType":"module"}