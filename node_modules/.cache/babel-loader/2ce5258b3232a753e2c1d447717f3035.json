{"ast":null,"code":"import _objectSpread from \"C:\\\\Users\\\\Lenovo\\\\Desktop\\\\Orbital\\\\Orbital-master\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/objectSpread\";\nvar _jsxFileName = \"C:\\\\Users\\\\Lenovo\\\\Desktop\\\\Orbital\\\\Orbital-master\\\\src\\\\Components\\\\Planning\\\\Timeline\\\\CustomModule.js\";\nimport React from 'react';\nimport { Modal, Form, FormGroup, Button, Label, Input, TabContent, TabPane, Nav, NavItem, NavLink } from 'reactstrap';\nimport Autocomplete from 'react-autocomplete';\nimport classnames from 'classnames';\n\nconst modules = require('../../Data/modata.json'); //Abstracting out ideas for each component\n\n\nclass CustomModule extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      isOpen: false,\n      moduleSelected: '',\n      addedCustomModules: [],\n      activeTab: '1'\n    };\n    this.toggleModal = this.toggleModal.bind(this);\n    this.getModalContents = this.getModalContents.bind(this);\n    this.getAddedModules = this.getAddedModules.bind(this);\n    this.handleOnChange = this.handleOnChange.bind(this);\n    this.handleCustomAdd = this.handleCustomAdd.bind(this);\n    this.handleCustomRem = this.handleCustomRem.bind(this);\n    this.customAddToTimeline = this.customAddToTimeline.bind(this);\n    this.customRemoveFromTimeline = this.customRemoveFromTimeline.bind(this);\n    this.toggleTab = this.toggleTab.bind(this);\n    this.openNUSMod = this.openNUSMod.bind(this);\n  }\n\n  toggleModal() {\n    this.setState(prevState => {\n      return _objectSpread({}, prevState, {\n        isOpen: !prevState.isOpen\n      });\n    });\n  }\n\n  toggleTab(e) {\n    this.setState(prevState => {\n      return _objectSpread({}, prevState, {\n        activeTab: e\n      });\n    });\n  }\n\n  openNUSMod() {\n    const mod = this.state.moduleSelected.split(\" \")[0];\n    const url = 'https://nusmods.com/modules/' + mod;\n    window.open(url);\n  }\n\n  customAddToTimeline(module, year, sem) {\n    const modObj = {\n      module: module,\n      added: [year, sem]\n    };\n    this.props.addToTimeline(module, year, sem);\n    this.setState(prevState => {\n      const newList = prevState.addedCustomModules.map(x => x);\n      newList.push(modObj);\n      return _objectSpread({}, prevState, {\n        addedCustomModules: newList\n      });\n    });\n  }\n\n  customRemoveFromTimeline(mod) {\n    var modObj = null;\n\n    for (var mo of this.state.addedCustomModules) {\n      if (mo.module === mod) {\n        modObj = mo;\n        break;\n      }\n    }\n\n    console.log(modObj);\n    this.props.removeFromTimeline(modObj);\n    const result = [];\n\n    for (var modObj of this.state.addedCustomModules) {\n      if (modObj.module !== mod) {\n        result.push(modObj);\n      }\n    }\n\n    this.setState(prevState => {\n      return _objectSpread({}, prevState, {\n        addedCustomModules: result\n      });\n    });\n  }\n\n  handleOnChange(e) {\n    const selectedModule = e.target.value;\n    this.setState(prevState => {\n      return _objectSpread({}, prevState, {\n        moduleSelected: selectedModule\n      });\n    });\n  }\n\n  handleCustomAdd(e, year, sem) {\n    e.preventDefault();\n    const moduleCode = this.state.moduleSelected.split(\" \")[0];\n\n    if (moduleCode === null || moduleCode === undefined) {\n      alert('Please select a module from the list');\n    } else {\n      this.customAddToTimeline(moduleCode, year, sem);\n      this.setState(prevState => {\n        return _objectSpread({}, prevState, {\n          isOpen: false,\n          moduleSelected: ''\n        });\n      });\n    }\n  }\n\n  handleCustomRem(e) {\n    e.preventDefault();\n    const moduleToBeRemoved = e.target.moduleCode.value;\n    this.customRemoveFromTimeline(moduleToBeRemoved);\n    this.setState(prevState => {\n      return _objectSpread({}, prevState, {\n        isOpen: false,\n        moduleSelected: ''\n      });\n    });\n  }\n\n  getAddedModules() {\n    var result = [];\n\n    for (var mod of this.state.addedCustomModules) {\n      const modOption = React.createElement(\"option\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 136\n        },\n        __self: this\n      }, mod.module);\n      result.push(modOption);\n    }\n\n    return result;\n  }\n\n  getModalContents() {\n    const modulesList = [];\n    Object.keys(modules).forEach(k => {\n      const result = k + \" - \" + modules[k].name;\n      modulesList.push(result);\n    });\n\n    const renderHtml = (item, highlighted) => {\n      return React.createElement(\"div\", {\n        key: item,\n        style: {\n          backgroundColor: highlighted ? '#eee' : '#eee',\n          maxWidth: '400px'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 149\n        },\n        __self: this\n      }, item);\n    };\n\n    return React.createElement(\"div\", {\n      style: {\n        textAlign: 'left',\n        fontSize: '25px',\n        margin: '15px',\n        fontWeight: 'bold',\n        border: '2px solid black',\n        borderRadius: '3px'\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 157\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      style: {\n        margin: '15px'\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 158\n      },\n      __self: this\n    }, \"Add or Remove Custom Modules\"), React.createElement(Nav, {\n      tabs: true,\n      style: {\n        textAlign: 'left',\n        fontSize: '15px'\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 159\n      },\n      __self: this\n    }, React.createElement(NavItem, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 160\n      },\n      __self: this\n    }, React.createElement(NavLink, {\n      className: classnames({\n        active: this.state.activeTab === '1'\n      }),\n      onClick: () => this.toggleTab('1'),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 161\n      },\n      __self: this\n    }, \"Add\")), React.createElement(NavItem, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 165\n      },\n      __self: this\n    }, React.createElement(NavLink, {\n      className: classnames({\n        active: this.state.activeTab === '2'\n      }),\n      onClick: () => this.toggleTab('2'),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 166\n      },\n      __self: this\n    }, \"Remove\"))), React.createElement(TabContent, {\n      activeTab: this.state.activeTab,\n      style: {\n        textAlign: 'left',\n        fontSize: '15px',\n        fontWeight: 'normal'\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 171\n      },\n      __self: this\n    }, React.createElement(TabPane, {\n      tabId: \"1\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 172\n      },\n      __self: this\n    }, React.createElement(Form, {\n      style: {\n        textAlign: 'left',\n        margin: '10px'\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 173\n      },\n      __self: this\n    }, React.createElement(FormGroup, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 174\n      },\n      __self: this\n    }, \"Add modules that are not found in the graph:\"), React.createElement(FormGroup, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 177\n      },\n      __self: this\n    }, \"Enter module code:\", React.createElement(\"div\", {\n      style: {},\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 179\n      },\n      __self: this\n    }, React.createElement(Autocomplete, {\n      getItemValue: i => i,\n      items: modulesList,\n      renderItem: renderHtml,\n      shouldItemRender: (item, value) => item.toLowerCase().indexOf(value.toLowerCase()) === 0,\n      value: this.state.moduleSelected,\n      onChange: this.handleOnChange,\n      onSelect: val => this.setState(pS => {\n        return _objectSpread({}, pS, {\n          moduleSelected: val\n        });\n      }),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 180\n      },\n      __self: this\n    })), React.createElement(Button, {\n      style: {\n        marginTop: '5px'\n      },\n      onClick: this.openNUSMod,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 189\n      },\n      __self: this\n    }, \"More info of module\")), React.createElement(FormGroup, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 191\n      },\n      __self: this\n    }, \"Add to which year/sem?\"), React.createElement(FormGroup, {\n      style: {\n        display: 'grid',\n        gridTemplateColumns: '1fr 1fr',\n        gridTemplateRows: '1fr 1fr 1fr 1fr',\n        width: '70%',\n        gridGap: '5px'\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 194\n      },\n      __self: this\n    }, React.createElement(Button, {\n      onClick: e => this.handleCustomAdd(e, 1, 1),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 195\n      },\n      __self: this\n    }, \"Year 1 Sem 1\"), React.createElement(Button, {\n      onClick: e => this.handleCustomAdd(e, 1, 2),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 196\n      },\n      __self: this\n    }, \"Year 1 Sem 2\"), React.createElement(Button, {\n      onClick: e => this.handleCustomAdd(e, 2, 1),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 197\n      },\n      __self: this\n    }, \"Year 2 Sem 1\"), React.createElement(Button, {\n      onClick: e => this.handleCustomAdd(e, 2, 2),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 198\n      },\n      __self: this\n    }, \"Year 2 Sem 2\"), React.createElement(Button, {\n      onClick: e => this.handleCustomAdd(e, 3, 1),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 199\n      },\n      __self: this\n    }, \"Year 3 Sem 1\"), React.createElement(Button, {\n      onClick: e => this.handleCustomAdd(e, 3, 2),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 200\n      },\n      __self: this\n    }, \"Year 3 Sem 2\"), React.createElement(Button, {\n      onClick: e => this.handleCustomAdd(e, 4, 1),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 201\n      },\n      __self: this\n    }, \"Year 4 Sem 1\"), React.createElement(Button, {\n      onClick: e => this.handleCustomAdd(e, 4, 2),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 202\n      },\n      __self: this\n    }, \"Year 4 Sem 2\")))), React.createElement(TabPane, {\n      tabId: \"2\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 206\n      },\n      __self: this\n    }, React.createElement(Form, {\n      style: {\n        textAlign: 'left',\n        margin: '10px'\n      },\n      onSubmit: this.handleCustomRem,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 207\n      },\n      __self: this\n    }, React.createElement(FormGroup, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 208\n      },\n      __self: this\n    }, \"Remove modules (Note that you can only remove modules that have been customly added by you)\"), React.createElement(FormGroup, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 211\n      },\n      __self: this\n    }, React.createElement(Label, {\n      for: \"removeModule\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 212\n      },\n      __self: this\n    }, \"Select module code to remove:\"), React.createElement(Input, {\n      type: \"select\",\n      name: \"moduleCode\",\n      id: \"moduleCode\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 213\n      },\n      __self: this\n    }, this.getAddedModules())), React.createElement(Button, {\n      type: \"submit\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 217\n      },\n      __self: this\n    }, \"Remove\")))));\n  }\n\n  render() {\n    return [React.createElement(NavItem, {\n      style: {\n        cursor: \"pointer\"\n      },\n      onClick: this.toggleModal,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 228\n      },\n      __self: this\n    }, React.createElement(NavLink, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 229\n      },\n      __self: this\n    }, \"Custom Module\")), React.createElement(Modal, {\n      isOpen: this.state.isOpen,\n      toggle: this.toggleModal,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 231\n      },\n      __self: this\n    }, this.getModalContents())];\n  }\n\n}\n\nexport default CustomModule;","map":{"version":3,"sources":["C:\\Users\\Lenovo\\Desktop\\Orbital\\Orbital-master\\src\\Components\\Planning\\Timeline\\CustomModule.js"],"names":["React","Modal","Form","FormGroup","Button","Label","Input","TabContent","TabPane","Nav","NavItem","NavLink","Autocomplete","classnames","modules","require","CustomModule","Component","constructor","props","state","isOpen","moduleSelected","addedCustomModules","activeTab","toggleModal","bind","getModalContents","getAddedModules","handleOnChange","handleCustomAdd","handleCustomRem","customAddToTimeline","customRemoveFromTimeline","toggleTab","openNUSMod","setState","prevState","e","mod","split","url","window","open","module","year","sem","modObj","added","addToTimeline","newList","map","x","push","mo","console","log","removeFromTimeline","result","selectedModule","target","value","preventDefault","moduleCode","undefined","alert","moduleToBeRemoved","modOption","modulesList","Object","keys","forEach","k","name","renderHtml","item","highlighted","backgroundColor","maxWidth","textAlign","fontSize","margin","fontWeight","border","borderRadius","active","i","toLowerCase","indexOf","val","pS","marginTop","display","gridTemplateColumns","gridTemplateRows","width","gridGap","render","cursor"],"mappings":"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","sourcesContent":["import React from 'react';\r\nimport {Modal, Form, FormGroup, Button, Label, Input, TabContent, TabPane, Nav, NavItem, NavLink} from 'reactstrap';\r\nimport Autocomplete from 'react-autocomplete';\r\nimport classnames from 'classnames';\r\nconst modules = require('../../Data/modata.json');\r\n\r\n//Abstracting out ideas for each component\r\n\r\nclass CustomModule extends React.Component {\r\n    constructor(props) {\r\n        super(props)\r\n        this.state = {\r\n            isOpen: false,\r\n            moduleSelected: '',\r\n            addedCustomModules: [],\r\n            activeTab: '1'\r\n        }\r\n        this.toggleModal = this.toggleModal.bind(this);\r\n        this.getModalContents = this.getModalContents.bind(this);\r\n        this.getAddedModules = this.getAddedModules.bind(this);\r\n        this.handleOnChange = this.handleOnChange.bind(this);\r\n        this.handleCustomAdd = this.handleCustomAdd.bind(this);\r\n        this.handleCustomRem = this.handleCustomRem.bind(this);\r\n        this.customAddToTimeline = this.customAddToTimeline.bind(this);\r\n        this.customRemoveFromTimeline = this.customRemoveFromTimeline.bind(this);\r\n        this.toggleTab = this.toggleTab.bind(this);\r\n        this.openNUSMod = this.openNUSMod.bind(this);\r\n    }\r\n\r\n    toggleModal() {\r\n        this.setState(prevState => {\r\n            return {...prevState,\r\n                isOpen: !prevState.isOpen\r\n            }\r\n        })\r\n    }\r\n\r\n    toggleTab(e) {\r\n        this.setState(prevState => {\r\n            return {\r\n                ...prevState,\r\n                activeTab: e\r\n            }\r\n        })\r\n    }\r\n\r\n    openNUSMod() {\r\n        const mod = this.state.moduleSelected.split(\" \")[0];\r\n        const url = 'https://nusmods.com/modules/' + mod;\r\n        window.open(url);\r\n    }\r\n\r\n    customAddToTimeline(module, year, sem) {\r\n        const modObj = {\r\n          module: module,\r\n          added: [year, sem]\r\n        }\r\n        this.props.addToTimeline(module, year, sem);\r\n        this.setState(prevState => {\r\n          const newList = prevState.addedCustomModules.map(x => x);\r\n          newList.push(modObj)\r\n          return {\r\n            ...prevState,\r\n            addedCustomModules: newList\r\n          };\r\n        });\r\n    }\r\n  \r\n    customRemoveFromTimeline(mod) {\r\n        var modObj = null;\r\n        for (var mo of this.state.addedCustomModules) {\r\n            if (mo.module === mod) {\r\n                modObj = mo;\r\n                break;\r\n            }\r\n        }\r\n        console.log(modObj);\r\n        this.props.removeFromTimeline(modObj);\r\n        const result = [];\r\n        for (var modObj of this.state.addedCustomModules) {\r\n          if (modObj.module !== mod) {\r\n            result.push(modObj);\r\n          }\r\n        }\r\n        this.setState(prevState => {\r\n          return {\r\n            ...prevState,\r\n            addedCustomModules: result,\r\n          };\r\n        });\r\n    }\r\n\r\n    handleOnChange(e) {\r\n        const selectedModule = e.target.value;\r\n        this.setState(prevState => {\r\n            return {\r\n                ...prevState,\r\n                moduleSelected: selectedModule\r\n            }\r\n        })\r\n    }\r\n\r\n    handleCustomAdd(e, year, sem) {\r\n        e.preventDefault();\r\n        const moduleCode = this.state.moduleSelected.split(\" \")[0];\r\n        if (moduleCode === null || moduleCode === undefined) {\r\n            alert('Please select a module from the list')\r\n        } else {\r\n            this.customAddToTimeline(moduleCode, year, sem);\r\n            this.setState(prevState => {\r\n                return {\r\n                    ...prevState,\r\n                    isOpen: false,\r\n                    moduleSelected: ''\r\n                }\r\n            });\r\n        }\r\n    }\r\n\r\n    handleCustomRem(e) {\r\n        e.preventDefault();\r\n        const moduleToBeRemoved = e.target.moduleCode.value;\r\n        this.customRemoveFromTimeline(moduleToBeRemoved);\r\n        this.setState(prevState => {\r\n            return {\r\n                ...prevState,\r\n                isOpen: false,\r\n                moduleSelected: ''\r\n            }\r\n        })\r\n    }\r\n\r\n    getAddedModules() {\r\n        var result = [];\r\n        for (var mod of this.state.addedCustomModules) {\r\n            const modOption = <option>{mod.module}</option>\r\n            result.push(modOption);\r\n        }\r\n        return result;\r\n    }\r\n\r\n    getModalContents() {\r\n        const modulesList = [];\r\n        Object.keys(modules).forEach(k => {\r\n            const result = k + \" - \" + modules[k].name;\r\n            modulesList.push(result);\r\n        })\r\n        const renderHtml = (item, highlighted) => {\r\n            return (<div\r\n                key={item}\r\n                style={{ backgroundColor: highlighted ? '#eee' : '#eee', maxWidth: '400px'}}\r\n                >\r\n                {item}\r\n            </div>);\r\n        }\r\n        return (\r\n            <div style={{textAlign: 'left', fontSize: '25px', margin: '15px', fontWeight: 'bold', border: '2px solid black', borderRadius: '3px'}}>\r\n                <div style={{margin: '15px'}}>Add or Remove Custom Modules</div>\r\n                <Nav tabs style={{textAlign: 'left', fontSize: '15px'}}>\r\n                    <NavItem>\r\n                        <NavLink className={classnames({ active: this.state.activeTab === '1' })} onClick={() => this.toggleTab('1')}>\r\n                            Add\r\n                        </NavLink>                        \r\n                    </NavItem>\r\n                    <NavItem>\r\n                        <NavLink className={classnames({ active: this.state.activeTab === '2' })} onClick={() => this.toggleTab('2')}>\r\n                            Remove\r\n                        </NavLink>\r\n                    </NavItem>\r\n                </Nav>\r\n                <TabContent activeTab={this.state.activeTab} style={{textAlign: 'left', fontSize: '15px', fontWeight: 'normal'}}>\r\n                    <TabPane tabId='1'>\r\n                    <Form style={{textAlign: 'left', margin: '10px'}}>\r\n                        <FormGroup>\r\n                            Add modules that are not found in the graph:\r\n                        </FormGroup>\r\n                        <FormGroup>\r\n                            Enter module code:\r\n                            <div style ={{}}>\r\n                            <Autocomplete\r\n                                getItemValue={i => i} \r\n                                items={modulesList} \r\n                                renderItem={renderHtml}\r\n                                shouldItemRender={(item, value) => (item.toLowerCase().indexOf(value.toLowerCase()) === 0)} \r\n                                value={this.state.moduleSelected} \r\n                                onChange={this.handleOnChange}\r\n                                onSelect={(val) => this.setState(pS => {return {...pS, moduleSelected: val}})}/>\r\n                            </div>\r\n                            <Button style={{marginTop: '5px'}} onClick={this.openNUSMod}>More info of module</Button>\r\n                        </FormGroup>\r\n                        <FormGroup>\r\n                            Add to which year/sem?\r\n                        </FormGroup>\r\n                        <FormGroup style={{display: 'grid', gridTemplateColumns: '1fr 1fr', gridTemplateRows: '1fr 1fr 1fr 1fr', width: '70%', gridGap: '5px'}}>\r\n                            <Button onClick={e => this.handleCustomAdd(e, 1, 1)}>Year 1 Sem 1</Button>\r\n                            <Button onClick={e => this.handleCustomAdd(e, 1, 2)}>Year 1 Sem 2</Button>\r\n                            <Button onClick={e => this.handleCustomAdd(e, 2, 1)}>Year 2 Sem 1</Button>\r\n                            <Button onClick={e => this.handleCustomAdd(e, 2, 2)}>Year 2 Sem 2</Button>\r\n                            <Button onClick={e => this.handleCustomAdd(e, 3, 1)}>Year 3 Sem 1</Button>\r\n                            <Button onClick={e => this.handleCustomAdd(e, 3, 2)}>Year 3 Sem 2</Button>\r\n                            <Button onClick={e => this.handleCustomAdd(e, 4, 1)}>Year 4 Sem 1</Button>\r\n                            <Button onClick={e => this.handleCustomAdd(e, 4, 2)}>Year 4 Sem 2</Button>\r\n                        </FormGroup>\r\n                    </Form>\r\n                    </TabPane>\r\n                    <TabPane tabId='2'>\r\n                        <Form style={{textAlign: 'left', margin: '10px'}} onSubmit={this.handleCustomRem}>\r\n                            <FormGroup>\r\n                                Remove modules (Note that you can only remove modules that have been customly added by you)\r\n                            </FormGroup>\r\n                            <FormGroup>\r\n                                <Label for='removeModule'>Select module code to remove:</Label>\r\n                                <Input type='select' name='moduleCode' id='moduleCode'>\r\n                                    {this.getAddedModules()}\r\n                                </Input>\r\n                            </FormGroup>\r\n                            <Button type=\"submit\">Remove</Button>\r\n                        </Form>\r\n                    </TabPane>\r\n                </TabContent>\r\n            </div>\r\n        )\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            [\r\n                <NavItem style={{cursor: \"pointer\"}} onClick={this.toggleModal}>\r\n                    <NavLink>Custom Module</NavLink>\r\n                </NavItem>,\r\n                <Modal isOpen={this.state.isOpen} toggle={this.toggleModal}>\r\n                    {this.getModalContents()}\r\n                </Modal>\r\n            ]\r\n        )\r\n    }\r\n}\r\n\r\nexport default CustomModule;"]},"metadata":{},"sourceType":"module"}